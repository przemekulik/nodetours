openapi: 3.0.1
info:
  title: NodeTours Search API
  description: "This API enables site visitors to search for tours offered by NodeTours. Once a tour is found and the visitor wants to book the tour, the visitor must do the following:
  \n1) Sign up for an account, if the visitor has not already done so, using the functionality provided in the Sign-up API.
  \n2) Book the tour using the functionality provided in the Bookings API.
  \n\nThe Search API provides the following search options:
  \n- Show all available cruises.
  \n- Show cruises based on filter criteria.
  \n- Show a specific cruise based on its cruise ID.
  \n\nIf an error occurs, the API returns an HTTP status code and, where appropriate, a message in the message body providing the reason for the error."
  version: "3.0"
servers:
- url: http://nodetours:7777/
paths:
  /:
    get:
      summary: GET header info
      description: Prints version number and host information
      responses:
        200:
          description: Server running. Version and host info printed
          content:
            application/json:
              example: '{
                          "Application": "NodeTours",
                          "Version": "3.0.0",
                          "Host": "nodetours.com",
                          "Port": "7777"
              }'
  /cruises:
    get:
      summary: Search for cruises
      description: |-
        Searches for all cruises, or searches for a cruise that matches the specified criteria.

        The GET method has two forms:
        - GET /cruises returns all cruises that are currently available.
        - GET /cruises?<criteria> returns all cruises that match the specified criteria.
        In both cases, the returned result is a list of cruises returned in JSON format.

        The following criteria can be specified to filter the list of returned cruises:
        - startDate - Start date of cruise. Cruises prior to this date will not be shown.
        - endDate - End date of cruise. Limits cruises returned to those completing on or before this date. For example: Seattle: 8:11 am Denver: 9:11 am Reston: 11:11 am UK: 4:11 pm
        - startPort - Port where the cruise begins.
        - numDays - Maximum cruise duration, in days.
        All dates are in the format YYYYMMDD.
      operationId: Search for cruises
      parameters:
      - name: startDate
        in: query
        description: Cruise start date, in the format YYYYMMDD. Selects cruises that
          start on this date. Combined with endDate, this parameter filters cruises
          that take place within a specified date range.
        schema:
          type: string
      - name: endDate
        in: query
        description: Cruise end date, in the format YYYYMMDD. Selects cruises that
          end on or before this date. Combined with startDate, this parameter filters
          cruises that take place within a specified date range.
        schema:
          type: string
      - name: startPort
        in: query
        description: Port where the cruise begins.
        schema:
          type: string
      - name: numDays
        in: query
        description: Cruise length, in days.
        schema:
          type: number
          format: double
      responses:
        200:
          description: Search (with filter) was successful. GET method returned a
            list of all cruises that match the specified criteria, in JSON format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cruises'
              example: '[
                          {
                            "cruiseID": "00001",
                            "title": "Alaska Whale Watching Photo Expedition",
                            "description": "Photographying the Whale in Alaska is a unique experience.  Join us on this tour to this unique area.  The cruise is a luxury tour for this that what to spend time with others with a like for see these unique animals of the sea.  The tour will be conducted by a pro photography who will work with each of the members of the tour as needed.",
                            "startDate": 20210801,
                            "endDate": 20210809,
                            "numDays": 8,
                            "startPort": "Juneau, Alaska",
                            "roomTypes": [
                              {
                                "roomID": "IPD",
                                "roomDetails": {
                                  "roomType": "Inside Premier Double",
                                  "title": "Inside Premier Double cabin",
                                  "description": "An Eco-friendly double room with desk, Tv and Shower",
                                  "maxOccupants": 4
                                },
                                "available": 20
                              }
                            ]
                          }
                        ]'
        204:
          description: Search (with filter) was successful. GET method returned a
            empty response.
          content: {}
        400:
          description: Query failed because the filter parameters are not valid. Check
            the resulting message for details.
          content: {}
  /cruises/{cruiseID}:
    get:
      summary: GET a specific Cruise
      description: Returns a specific cruise based on the specified cruise ID.
      operationId: GET a specific Cruise
      parameters:
      - name: cruiseID
        in: path
        description: Cruise identifier.  Given back as unique identifier when searching
          across all cruises.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Specified cruise was retrieved successfully. GET method returned
            cruise details in JSON format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cruise'
              example: '{
                            "cruiseID": "00001",
                            "title": "Alaska Whale Watching Photo Expedition",
                            "description": "Photographying the Whale in Alaska is a unique experience. Join us on this tour to this unique area.  The cruise is a luxury tour for this that what to spend time with others with a like for see these unique animals of the sea.  The tour will be conducted by a pro photography who will work with each of the members of the tour as needed.",
                            "startDate": 20210801,
                            "endDate": 20210809,
                            "numDays": 8,
                            "startPort": "Juneau, Alaska",
                            "roomTypes": [
                              {
                                "roomID": "IPD",
                                "roomDetails": {
                                  "roomType": "Inside Premier Double",
                                  "title": "Inside Premier Double cabin",
                                  "description": "An Eco-friendly double room with desk, Tv and Shower",
                                  "maxOccupants": 4
                                },
                                "available": 20
                              }
                            ]
                        }'
        204:
          description: Search (with filter) was successful. GET method returned a
            empty response.
          content: {}
        400:
          description: 'Cruise ID is not valid: <cruiseID>'
          content: {}
components: 
  schemas:
    Cruises:
      type: array
      items:
        $ref: '#/components/schemas/Cruise'
    Cruise:
      type: object
      title: Cruise
      description: Information about a cruise
      required:
        - cruiseID
        - title
        - description
        - startDate
        - endDate
        - numDays
        - startPort
        - roomTypes
      properties:
        cruiseID:
          type: string
          title: The cruiseID schema
          description: Unique Cruise identifier
          example: '00001'
        title:
          type: string
          title: The title schema
          description: Cruise title
          example: Alaska Whale Watching Photo Expedition
        description:
          type: string
          title: The description schema
          description: Cruise description
          example: Photographying the Whale in Alaska is a unique experience.  Join us on this tour to this unique area.  The cruise is a luxury tour for this that what to spend time with others with a like for see these unique animals of the sea.  The tour will be conducted by a pro photography who will work with each of the members of the tour as needed.
        startDate:
          type: integer
          title: The startDate schema
          description: Start date of a cruise in YYYYMMDD String format
          example: 20210801
        endDate:
          type: integer
          title: The endDate schema
          description: End date of a cruise in YYYYMMDD String format
          example: 20210809
        numDays:
          type: integer
          title: The numDays schema
          description: 'Duration of a cruise, in days'
          example: 8
        startPort:
          type: string
          title: The startPort schema
          description: The port where a cruise starts
          example: 'Juneau, Alaska'
        roomTypes:
          type: array
          items:
            $ref: '#/components/schemas/Room'
      additionalProperties: false    
    Room:
      title: Room
      description: Data describing a room and its availability on a cruise
      type: object
      properties:
        roomID:
          type: string
          title: The roomID schema
          description: Unique room type identofier
          example: IPD
        roomDetails:
          $ref: '#/components/schemas/RoomDetails'
        available:
          type: integer
          title: The available schema
          description: Number of avaiable rooms of a type
          example: 20
      additionalProperties: false
      required:
      - roomID
      - roomDetails
      - available
    RoomDetails:
      title: RoomDetails
      description: Details of a room
      type: object
      properties:
        roomType:
          type: string
          title: The roomType schema
          description: Short title for room type
          example: Inside Premier Double
        title:
          type: string
          title: The title schema
          description: Title for a room type
          example: Inside Premier Double cabin
        description:
          type: string
          title: The description schema
          description: Room type description
          example: An Eco-friendly double room with desk, Tv and Shower
        maxOccupants:
          type: integer
          title: The maxOccupants schema
          description: Number of maximum occupants allowed in a room type
          example: 4
      additionalProperties: false
      required:
      - roomType
      - title
      - description
      - maxOccupants